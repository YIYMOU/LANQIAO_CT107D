C51 COMPILER V9.55   MAIN                                                                  10/08/2020 13:35:00 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <stc15f2k60s2.h>
   2          #include "iic.h"
   3          #define u8 unsigned char
   4          #define u16 unsigned int
   5          
   6          #define get() (P3 & 0X3F) | ((P4 & 0X10) << 3) | ((P4 & 0X04) << 4)
   7          
   8          u8 code TAB[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xbf,0xff,
   9                  0x8e, // F -- 12
  10                  0xc1 // U -- 13
  11          };
  12          u8 disbuf[] = {0,1,2,3,4,5,6,7,8};
  13          
  14          u16 zheng = 0,fan = 0,zheng_now = 0,fan_now = 0,fre_tt = 0,fre;
  15          bit fre_flag = 0;
  16          
  17          u16 volt,volt_tt = 0,s5_tt = 0;
  18          
  19          bit s5_flag = 0;
  20          bit s6_flag = 1;
  21          bit s7_flag = 1;
  22          
  23          bit mode = 0;
  24          u8 led_state = 0xff;
  25          void Delay5ms()         //@12.000MHz
  26          {
  27   1              unsigned char i, j;
  28   1      
  29   1              i = 59;
  30   1              j = 90;
  31   1              do
  32   1              {
  33   2                      while (--j);
  34   2              } while (--i);
  35   1      }
  36          
  37          void set_port(u8 p2,u8 p0)
  38          {
  39   1              P0 = p0;
  40   1              P2 &= 0X1F;
  41   1              P2 |= p2;
  42   1              P0 = p0;
  43   1              P2 &= 0X1F;
  44   1      }
  45          
  46          void allinit(void)
  47          {
  48   1              set_port(0x80,0xff);
  49   1              set_port(0xa0,0x00);
  50   1              set_port(0xc0,0xff);
  51   1              set_port(0xe0,0xff);
  52   1      }
  53          
  54          void display_mode1(void)
C51 COMPILER V9.55   MAIN                                                                  10/08/2020 13:35:00 PAGE 2   

  55          {
  56   1              disbuf[1] = 12;
  57   1              disbuf[2] = 11;
  58   1              disbuf[3] = 11;
  59   1              if(fre >= 10000)
  60   1              {
  61   2                      disbuf[4] = fre / 10000;
  62   2                      disbuf[5] = fre / 1000 % 10;
  63   2                      disbuf[6] = fre / 100 % 10;
  64   2                      disbuf[7] = fre / 10 % 10;
  65   2                      disbuf[8] = fre % 10;
  66   2              }
  67   1              else if(fre >= 1000)
  68   1              {
  69   2                      disbuf[4] = 11;
  70   2                      disbuf[5] = fre / 1000 % 10;
  71   2                      disbuf[6] = fre / 100 % 10;
  72   2                      disbuf[7] = fre / 10 % 10;
  73   2                      disbuf[8] = fre % 10;
  74   2              }
  75   1              else if(fre >= 100)
  76   1              {
  77   2                      disbuf[4] = 11;
  78   2                      disbuf[5] = 11;
  79   2                      disbuf[6] = fre / 100 % 10;
  80   2                      disbuf[7] = fre / 10 % 10;
  81   2                      disbuf[8] = fre % 10;
  82   2              }
  83   1      }
  84          
  85          void display_mode2(void)
  86          {
  87   1              disbuf[1] = 13;
  88   1              disbuf[2] = 11;
  89   1              disbuf[3] = 11;
  90   1              disbuf[4] = 11;
  91   1              disbuf[5] = 11;
  92   1              disbuf[6] = volt / 100 % 10;
  93   1              disbuf[7] = volt / 10 % 10;
  94   1              disbuf[8] = volt % 10;
  95   1      }
  96          
  97          void BTN(void)
  98          {
  99   1              static key_buf = 0;
 100   1              u8 key_temp = P3 & 0X0F;
 101   1              if(key_temp != 0x0f && !key_buf)
 102   1              {
 103   2                      Delay5ms();
 104   2                      key_temp = P3 & 0X0F;
 105   2                      if(key_temp != 0x0f && !key_buf)
 106   2                      {
 107   3                              key_buf = key_temp;
 108   3                      }
 109   2              }
 110   1              else if(key_temp == 0x0f && key_buf)
 111   1              {
 112   2                      Delay5ms();
 113   2                      key_temp = P3 & 0X0F;
 114   2                      if(key_temp == 0x0f && key_buf)
 115   2                      {
 116   3                              switch(key_buf)
C51 COMPILER V9.55   MAIN                                                                  10/08/2020 13:35:00 PAGE 3   

 117   3                              {
 118   4                                      case 0x0e: 
 119   4                                              s7_flag = !s7_flag;
 120   4                                      break;
 121   4                                      case 0x0d: 
 122   4                                              s6_flag = !s6_flag;
 123   4                                      break;
 124   4                                      case 0x0b:      // s5
 125   4                                              s5_flag = !s5_flag;
 126   4                                              if(s5_flag == 0)
 127   4                                              {
 128   5                                                      write_pcf8591(0x40,102);
 129   5                                                      Delay5ms();
 130   5                                              }
 131   4                                      break;
 132   4                                      case 0x07:      // s4
 133   4                                              mode = !mode;
 134   4                                      break;
 135   4                              }
 136   3                      }
 137   2                      key_buf = 0;
 138   2              }
 139   1      }
 140          
 141          void Timer0Init(void)
 142          {
 143   1              AUXR |= 0x80;           //定时器时钟1T模式
 144   1              TMOD &= 0xF0;           //设置定时器模式
 145   1              TMOD |= 0x04;           //设置定时器模式
 146   1              TL0 = 0;                //设置定时初值
 147   1              TH0 = 0;                //设置定时初值
 148   1              TF0 = 0;                //清除TF0标志
 149   1              TR0 = 0;                //定时器0开始计时
 150   1      }
 151          
 152          void Timer1Init(void)           //100微秒@12.000MHz
 153          {
 154   1              AUXR |= 0x40;           //定时器时钟1T模式
 155   1              TMOD &= 0x0F;           //设置定时器模式
 156   1              TL1 = 0x50;             //设置定时初值
 157   1              TH1 = 0xFB;             //设置定时初值
 158   1              TF1 = 0;                //清除TF1标志
 159   1              TR1 = 1;                //定时器1开始计时
 160   1      }
 161          
 162          
 163          void timer1(void) interrupt 3
 164          {
 165   1              static u8 smg_cnt = 1,smg_tt = 0;
 166   1              if(++smg_tt >= 20)
 167   1              {
 168   2                      smg_tt = 0;
 169   2                      if(s7_flag)
 170   2                      {
 171   3                              if(mode == 0 && smg_cnt == 6)
 172   3                              {
 173   4                                      set_port(0xc0,0x01 << (smg_cnt - 1));
 174   4                                      set_port(0xe0,TAB[disbuf[smg_cnt]] & 0x7f);
 175   4                              }
 176   3                              else
 177   3                              {
 178   4                                      set_port(0xc0,0x01 << (smg_cnt - 1));
C51 COMPILER V9.55   MAIN                                                                  10/08/2020 13:35:00 PAGE 4   

 179   4                                      set_port(0xe0,TAB[disbuf[smg_cnt]]);
 180   4                              }
 181   3                      }
 182   2                      else
 183   2                      {
 184   3                              set_port(0xc0,0x01 << (smg_cnt - 1));
 185   3                              set_port(0xe0,TAB[11]);
 186   3                      }
 187   2                      if(++smg_cnt >= 9) smg_cnt = 1;
 188   2              }
 189   1              
 190   1              if(++fre_tt >= 10000)
 191   1              {
 192   2                      fre_tt = 0;
 193   2                      TR0 = 0;
 194   2                      fre = (TH0 << 8) | TL0;
 195   2                      TH0 = 0;
 196   2                      TL0 = 0;
 197   2                      TR0 = 1;
 198   2              }
 199   1              
 200   1              if(++volt_tt >= 800)
 201   1              {
 202   2                      volt_tt = 0;
 203   2              }
 204   1              
 205   1              if(s6_flag)
 206   1                      {
 207   2                              led_state = 0xff;
 208   2                              if(mode)
 209   2                              {
 210   3                                      led_state &= 0xfd;
 211   3                              }
 212   2                              else
 213   2                              {
 214   3                                      led_state &= 0xfe;
 215   3                              }
 216   2                              if(volt >= 350 || volt < 250 && volt >= 150)
 217   2                              {
 218   3                                      led_state &= 0xfb;
 219   3                              }
 220   2                              if(fre >= 10000 || fre >= 1000 && fre < 5000)
 221   2                              {
 222   3                                      led_state &= 0xf7;
 223   3                              }
 224   2                              if(!s5_flag)
 225   2                              {
 226   3                                      led_state &= 0xef;
 227   3                              }
 228   2                              set_port(0x80,led_state);
 229   2                      }
 230   1                      else
 231   1                      {
 232   2                              set_port(0x80,0xff);
 233   2                      }
 234   1      }
 235          
 236          void main(void)
 237          {
 238   1              allinit();
 239   1              Timer0Init();
 240   1              Timer1Init();
C51 COMPILER V9.55   MAIN                                                                  10/08/2020 13:35:00 PAGE 5   

 241   1              ET1 = 1;
 242   1              EA = 1;
 243   1              write_pcf8591(0x40,102);
 244   1              Delay5ms();
 245   1              while(1)
 246   1              {
 247   2                      BTN();
 248   2                      if(volt_tt == 399 || volt_tt == 799)
 249   2                      {
 250   3                              volt = (u16)(read_pcf8591(3) * 1.96);
 251   3                              if(s5_flag)
 252   3                              {
 253   4                                      write_pcf8591(0x40,102);
 254   4                              }
 255   3                              else
 256   3                              {
 257   4                                      write_pcf8591(0x40,volt / 2);
 258   4                              }
 259   3                      }
 260   2                      if(mode == 0)
 261   2                      {
 262   3                              display_mode2();
 263   3                      }
 264   2                      else if(mode == 1)
 265   2                      {
 266   3                              display_mode1();
 267   3                      }
 268   2              }
 269   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    867    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     32    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
