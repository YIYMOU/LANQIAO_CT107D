C51 COMPILER V9.55   MYMAIN                                                                11/01/2020 11:13:19 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MYMAIN
OBJECT MODULE PLACED IN .\Objects\MyMain.obj
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE MyMain.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\My
                    -Main.lst) OBJECT(.\Objects\MyMain.obj)

line level    source

   1          #include <stc15f2k60s2.h>
   2          #include "ds1302.h"
   3          #include "iic.h"
   4          
   5          #define u8 unsigned char
   6          #define u16 unsigned int
   7          
   8          #define get() (P3 & 0x3f) | ((P4 & 0X04) << 4) | ((P4 & 0X10) << 3) // 8 4 2 1   8 4 2 1 
   9          
  10          
  11          sbit TX = P1^0;
  12          sbit RX = P1^1;
  13          
  14          extern u8 TIME[];
  15          
  16          u8 code TAB[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xbf,0xff};
  17          u8 disbuf[] = {0,1,2,3,4,5,6,7,8};
  18          
  19          u8 smg_tt = 0,smg_cnt = 0;
  20          u8 key_buf = 0;
  21          
  22          u8 display_mode = 0;
  23          
  24          bit zidong = 0;
  25          bit correct = 0;
  26          u8 incorrect_cnt = 0;
  27          
  28          bit relay = 0;
  29          bit buzzer = 0;
  30          u16 relay_tt = 0;
  31          u16 buzzer_tt = 0;
  32          
  33          u8 key[] = {0,1,2,3,4,5,6};
  34          u8 key_cnt = 0;
  35          
  36          u16 wave_tt = 0;
  37          bit wave_flag = 0;
  38          bit display_flag = 0;
  39          
  40          void delay_ms(u16 ms)
  41          {
  42   1              u16 i,j;
  43   1              for(i = 845; i > 0 ; i--)
  44   1                      for(j = ms; j > 0; j--);
  45   1      }
  46          
  47          void set_port(u8 p2,u8 p0)
  48          {
  49   1              P0 = p0;
  50   1              P2 &= 0X1F;
  51   1              P2 |= (p2); 
  52   1              P0 = p0;
  53   1              P2 &= 0X1F;
  54   1      }
C51 COMPILER V9.55   MYMAIN                                                                11/01/2020 11:13:19 PAGE 2   

  55          
  56          void allinit(void)
  57          {
  58   1              set_port(0x80,0xff);
  59   1              set_port(0xa0,0x00);
  60   1              set_port(0xc0,0xff);
  61   1              set_port(0xe0,0xff);
  62   1      }
  63          
  64          bit key_check()
  65          {
  66   1              u8 temp1,temp2,temp3;
  67   1              temp1 = eeprom_read(0X00);
  68   1              temp2 = eeprom_read(0X01);
  69   1              temp3 = eeprom_read(0X02);
  70   1              if((key[1] * 10 + key[2]) == temp1 && (key[3] * 10 + key[4]) == temp2 && (key[5] * 10 + key[6]) == temp3)
  71   1                      return 1;
  72   1              else 
  73   1                      return 0;
  74   1      }
  75          void time_check(void)
  76          {
  77   1              if(TIME[2] >= 0X07 && TIME[2] < 0X22 || TIME[2] == 0X22 && TIME[1] == 0X00 && TIME[0] == 0X00)
  78   1              {
  79   2                      zidong = 1;
  80   2              }
  81   1              else
  82   1              {
  83   2                      zidong = 0;
  84   2              }
  85   1      }
  86          
  87          void display(void)
  88          {
  89   1              if(zidong && display_mode == 0)
  90   1              {
  91   2                      disbuf[1] = TIME[2] / 16;
  92   2                      disbuf[2] = TIME[2] % 16;
  93   2                      disbuf[3] = 10;
  94   2                      disbuf[4] = TIME[1] / 16;
  95   2                      disbuf[5] = TIME[1] % 16;
  96   2                      disbuf[6] = 10;
  97   2                      disbuf[7] = TIME[0] / 16;
  98   2                      disbuf[8] = TIME[0] % 16;
  99   2              }
 100   1              else
 101   1              {
 102   2                      if(display_mode == 0)
 103   2                      {
 104   3                              disbuf[1] = 10;
 105   3                              disbuf[2] = 10; 
 106   3                              if(key_cnt >= 1)
 107   3                                      disbuf[3] = key[1];
 108   3                              else
 109   3                                      disbuf[3] = 11;
 110   3                              if(key_cnt >= 2)
 111   3                                      disbuf[4] = key[2];
 112   3                              else
 113   3                                      disbuf[4] = 11;
 114   3                              if(key_cnt >= 3)
 115   3                                      disbuf[5] = key[3];
 116   3                              else
C51 COMPILER V9.55   MYMAIN                                                                11/01/2020 11:13:19 PAGE 3   

 117   3                                      disbuf[5] = 11;
 118   3                              if(key_cnt >= 4)
 119   3                                      disbuf[6] = key[4];
 120   3                              else
 121   3                                      disbuf[6] = 11;
 122   3                              if(key_cnt >= 5)
 123   3                                      disbuf[7] = key[5];
 124   3                              else
 125   3                                      disbuf[7] = 11;
 126   3                              if(key_cnt >= 6)
 127   3                                      disbuf[8] = key[6];
 128   3                              else
 129   3                                      disbuf[8] = 11;
 130   3                      }
 131   2                      if(display_mode == 13)
 132   2                      {
 133   3                              if(!correct)
 134   3                              {
 135   4                                      disbuf[1] = 11;
 136   4                                      disbuf[2] = 10;
 137   4                              }       
 138   3                              else
 139   3                              {
 140   4                                      disbuf[1] = 10;
 141   4                                      disbuf[2] = 11;
 142   4                              }
 143   3                              if(key_cnt >= 1)
 144   3                                      disbuf[3] = key[1];
 145   3                              else
 146   3                                      disbuf[3] = 11;
 147   3                              if(key_cnt >= 2)
 148   3                                      disbuf[4] = key[2];
 149   3                              else
 150   3                                      disbuf[4] = 11;
 151   3                              if(key_cnt >= 3)
 152   3                                      disbuf[5] = key[3];
 153   3                              else
 154   3                                      disbuf[5] = 11;
 155   3                              if(key_cnt >= 4)
 156   3                                      disbuf[6] = key[4];
 157   3                              else
 158   3                                      disbuf[6] = 11;
 159   3                              if(key_cnt >= 5)
 160   3                                      disbuf[7] = key[5];
 161   3                              else
 162   3                                      disbuf[7] = 11;
 163   3                              if(key_cnt >= 6)
 164   3                                      disbuf[8] = key[6];
 165   3                              else
 166   3                                      disbuf[8] = 11;
 167   3                      }
 168   2              }
 169   1      }
 170          
 171          void Timer1Init(void)           //100微秒@12.000MHz
 172          {
 173   1              AUXR |= 0x40;           //定时器时钟1T模式
 174   1              TMOD &= 0x0F;           //设置定时器模式
 175   1              TL1 = 0x50;             //设置定时初值
 176   1              TH1 = 0xFB;             //设置定时初值
 177   1              TF1 = 0;                //清除TF1标志
 178   1              TR1 = 1;                //定时器1开始计时
C51 COMPILER V9.55   MYMAIN                                                                11/01/2020 11:13:19 PAGE 4   

 179   1      }
 180          
 181          void KBD(void)
 182          {
 183   1              u8 key_temp;
 184   1              P3 = 0X0F; P44 = 0; P42 = 0;
 185   1              key_temp = get();
 186   1              P3 = 0XF0; P44 = 1; P42 = 1;
 187   1              key_temp |= get();
 188   1              if(key_temp != 0xff && key_buf == 0)
 189   1              {
 190   2                      delay_ms(5);
 191   2                      P3 = 0X0F; P44 = 0; P42 = 0;
 192   2                      key_temp = get();
 193   2                      P3 = 0Xf0; P44 = 1; P42 = 1;
 194   2                      key_temp |= get();
 195   2                      if(key_temp != 0xff && key_buf == 0)
 196   2                      {
 197   3                              key_buf = key_temp;
 198   3                      }
 199   2              }
 200   1              else if(key_temp == 0xff && key_buf)
 201   1              {
 202   2                      delay_ms(5);
 203   2                      P3 = 0X0F; P44 = 0; P42 = 0;
 204   2                      key_temp = get();
 205   2                      P3 = 0Xf0; P44 = 1; P42 = 1;
 206   2                      key_temp |= get();
 207   2                      if(key_temp == 0xff && key_buf)
 208   2                      {
 209   3                              switch(key_buf)
 210   3                              {
 211   4                                      case 0x7e: if(key_cnt < 6) key[++key_cnt] = 0; break; // S7
 212   4                                      case 0x7d: if(key_cnt < 6) key[++key_cnt] = 4; break; // S6
 213   4                                      case 0x7b: if(key_cnt < 6) key[++key_cnt] = 8; break; // S5
 214   4                                      //case 0x77: disbuf[1] = 0; disbuf[2] = 4; disbuf[3] = 10; break; // S4
 215   4                                      
 216   4                                      case 0xbe: if(key_cnt < 6) key[++key_cnt] = 1; break; // S11
 217   4                                      case 0xbd: if(key_cnt < 6) key[++key_cnt] = 5; break; // S10
 218   4                                      case 0xbb: if(key_cnt < 6) key[++key_cnt] = 9; break; // S9
 219   4                                      //case 0xb7: disbuf[1] = 0; disbuf[2] = 8; disbuf[3] = 10; break; // S8
 220   4                                      
 221   4                                      case 0xde: if(key_cnt < 6) key[++key_cnt] = 2; break; // S15
 222   4                                      case 0xdd: if(key_cnt < 6) key[++key_cnt] = 6; break; // S14
 223   4                                      case 0xdb: display_mode = 13; key_cnt = 0;break; // 设置
 224   4                                      case 0xd7: 
 225   4                                                      if(key_cnt == 6)
 226   4                                                      {
 227   5                                                              key_cnt = 0;
 228   5                                                              if(key_check() && display_mode == 0)
 229   5                                                              {
 230   6                                                                      relay = 1;
 231   6                                                                      relay_tt = 0;
 232   6                                                                      incorrect_cnt = 0;
 233   6                                                              }
 234   5                                                              else if(!key_check() && display_mode == 0)
 235   5                                                              {
 236   6                                                                      relay = 0;
 237   6                                                                      if(++incorrect_cnt == 3)
 238   6                                                                      {
 239   7                                                                              incorrect_cnt = 0;
 240   7                                                                              buzzer = 1;
C51 COMPILER V9.55   MYMAIN                                                                11/01/2020 11:13:19 PAGE 5   

 241   7                                                                      }
 242   6                                                              }
 243   5                                                              else if(correct && display_mode == 13)
 244   5                                                              {
 245   6                                                                      correct = 0;
 246   6                                                                      eeprom_write(0X00,key[1] * 10 + key[2]);
 247   6                                                                      delay_ms(5);
 248   6                                                                      eeprom_write(0X01,key[3] * 10 + key[4]);
 249   6                                                                      delay_ms(5);
 250   6                                                                      eeprom_write(0X02,key[5] * 10 + key[6]);
 251   6                                                                      delay_ms(5);
 252   6                                                                      display_mode = 0;
 253   6                                                              }
 254   5                                                              else if(key_check() && display_mode == 13)
 255   5                                                              {
 256   6                                                                      correct = 1;
 257   6                                                              }
 258   5                                                              else if(!key_check() && display_mode == 13)
 259   5                                                              {
 260   6                                                                      if(++incorrect_cnt == 3)
 261   6                                                                      {
 262   7                                                                              buzzer = 1;
 263   7                                                                              display_mode = 0;
 264   7                                                                              incorrect_cnt = 0;
 265   7                                                                      }
 266   6                                                                      correct = 0;
 267   6                                                              }
 268   5                                                      }
 269   4                                      break; // 确认
 270   4                                      
 271   4                                      case 0xee: if(key_cnt < 6) key[++key_cnt] = 3; break; // S19
 272   4                                      case 0xed: if(key_cnt < 6) key[++key_cnt] = 7; break; // S18
 273   4                                      case 0xeb: key_cnt = 0; break; // 复位
 274   4                                      case 0xe7: display_mode = 0; break; // 退出
 275   4                              }
 276   3                              key_buf = 0;
 277   3                      }
 278   2              }
 279   1      }
 280          
 281          void timer1(void) interrupt 3
 282          {
 283   1              u8 p0 = 0;
 284   1              if(++smg_tt >= 20)
 285   1              {
 286   2                      smg_tt = 0;
 287   2                      set_port(0xc0,0x01 << smg_cnt);
 288   2                      set_port(0xe0,TAB[disbuf[smg_cnt + 1]]);
 289   2                      if(++smg_cnt >= 8) smg_cnt = 0;
 290   2              }
 291   1              
 292   1              if(++wave_tt >= 2000)
 293   1              {
 294   2                      wave_tt = 0;
 295   2                      wave_flag = 1;
 296   2              }
 297   1              
 298   1              if(++relay_tt >= 50000)
 299   1              {
 300   2                      relay_tt = 0;
 301   2                      relay = 0;
 302   2              }
C51 COMPILER V9.55   MYMAIN                                                                11/01/2020 11:13:19 PAGE 6   

 303   1              
 304   1              if(++buzzer_tt >= 30000)
 305   1              {
 306   2                      buzzer_tt = 0;
 307   2                      buzzer = 0;
 308   2              }
 309   1              
 310   1              if(relay)
 311   1                      p0 |= 0x10;
 312   1              if(buzzer)
 313   1                      p0 |= 0x40;
 314   1              
 315   1              set_port(0xa0,p0);
 316   1      }
 317          
 318          void Timer0Init(void)           //12微秒@12.000MHz
 319          {
 320   1              AUXR &= 0x7F;           //定时器时钟12T模式
 321   1              TMOD &= 0xF0;           //设置定时器模式
 322   1              TL0 = 0xF4;             //设置定时初值
 323   1              TH0 = 0xFF;             //设置定时初值
 324   1              TF0 = 0;                //清除TF0标志
 325   1              TR0 = 0;                //定时器0停止
 326   1      }
 327          
 328          u8 wave_rec(void)
 329          {
 330   1              u8 distance , num = 10;
 331   1              TL0 = 0xF4;             //设置定时初值
 332   1              TH0 = 0xFF;             //设置定时初值
 333   1              TX = 0;
 334   1              TR0 = 1;
 335   1              while(num--)
 336   1              {
 337   2                      while(!TF0);
 338   2                      TX ^= 1;
 339   2                      TF0 = 0;
 340   2              }
 341   1              TR0 = 0;
 342   1              TL0 = 0;                //设置定时初值
 343   1              TH0 = 0;                //设置定时初值
 344   1              TR0 = 1;
 345   1              while(RX && !TF0);
 346   1              TR0 = 0;
 347   1              if(TF0)
 348   1              {
 349   2                      TF0 = 0;
 350   2                      distance = 255;
 351   2              }
 352   1              else
 353   1              {
 354   2                      distance = ((TH0 << 8) | TL0) * 0.017;
 355   2              }
 356   1              return distance;
 357   1      }
 358          
 359          void main(void)
 360          {
 361   1              ET1 = 1;
 362   1              EA = 1;
 363   1              Timer1Init();
 364   1              Timer0Init();
C51 COMPILER V9.55   MYMAIN                                                                11/01/2020 11:13:19 PAGE 7   

 365   1              allinit();
 366   1              ds1302_init();
 367   1              
 368   1              eeprom_write(0X00,65);
 369   1              delay_ms(0);
 370   1              eeprom_write(0X01,43);
 371   1              delay_ms(0);
 372   1              eeprom_write(0X02,21);
 373   1              delay_ms(0);
 374   1              
 375   1              while(1)
 376   1              {
 377   2                      if(zidong && wave_flag)
 378   2                      {
 379   3                              wave_flag = 0;
 380   3                              if(wave_rec() < 30)
 381   3                              {
 382   4                                      relay_tt = 0;
 383   4                                      relay = 1;
 384   4                              }
 385   3                      }
 386   2                      ds1302_get();
 387   2                      time_check();
 388   2                      display();
 389   2                      KBD();
 390   2              }
 391   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1606    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
